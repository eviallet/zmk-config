/dts-v1/;
#include <nordic/nrf52840_qiaa.dtsi>
#include "holyiot_connector.dtsi"
#include <dt-bindings/zmk/matrix_transform.h>
// #include <dt-bindings/zmk/trackball_pim447.h>

/ {
	model = "HOLYIOT nRF52840";
	compatible = "holyiot,nrf52840";

	chosen {
		zmk,kscan = &kscan0;
		zmk,matrix_transform = &default_transform;

		zephyr,console = &uart0;
		zephyr,shell-uart = &uart0;
		zephyr,uart-mcumgr = &uart0;
		zephyr,bt-mon-uart = &uart0;
		zephyr,bt-c2h-uart = &uart0;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zephyr,code-partition = &slot0_partition;
	};

	leds {
		compatible = "gpio-leds";
		led0: led_0 {
			gpios = <&gpio1 4 0>;
			label = "Led 0";
		};
		led1: led_1 {
			gpios = <&gpio1 6 0>;
			label = "Led 1";
		};
		led2: led_2 {
			gpios = <&gpio0 9 0>;
			label = "Led 2";
		};
		led3: led_3 {
			gpios = <&gpio0 10 1>;
			label = "Led 3";
		};
	};

	buttons {
		compatible = "gpio-keys";
		button0: button_0 {
			gpios = <&gpio0 7 GPIO_ACTIVE_LOW>;
			label = "Push button switch 0";
		};
	};

	aliases {
		led0 = &led0;
		led1 = &led1;
		led2 = &led2;
		led3 = &led3;
	};

	sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder>;
    };

	vbatt {
		compatible = "zmk,battery-voltage-divider";
		io-channels = <&adc 0>;
		label = "BATTERY";
		output-ohms = <2000000>;
		full-ohms = <(2000000 + 806000)>;
	};

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <2>;
        rows = <4>;
        map = <
			RC(0,0)  
			RC(1,0)  RC(1,1)
			RC(2,0)  RC(2,1)
			RC(3,0)  RC(3,1)
        >;
    };

	kscan0: kscan_0 {
		compatible = "zmk,kscan-gpio-matrix";
		label = "KSCAN";
		diode-direction = "col2row";

		col-gpios
			= <&gpio1 1 GPIO_ACTIVE_HIGH> 
			, <&gpio1 3 GPIO_ACTIVE_HIGH>
			;
			
		row-gpios
			= <&gpio1 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio1 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio1 13 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio1 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			;
	};

};

&adc {
	status = "okay";
};

&encoder {
	status = "okay";
};

&gpiote {
	status = "okay";
};

&gpio0 {
	status = "okay";
};

&gpio1 {
	status = "okay";
};

// &i2c0 {
// 	compatible = "nordic,nrf-twi";
// 	status = "okay";
// 	sda-pin = <10>;
// 	scl-pin = <11>;
	
// 	trackball_pim447@a {
// 		compatible = "pimoroni,trackball_pim447";
// 		reg = <0xa>;
// 		label = "TRACKBALL_PIM447";

// 		move-factor = <1>;      // Increase pointer velocity (default: 1)
// 		//invert-move-x;        // Invert pointer X axis (left is right, and vice versa)
// 		//invert-move-y;        // Invert pointer Y axis (up is down, and vice versa)
// 		button = <0>;           // Send right-click when pressing the ball (default: 0, ie. left-click)
// 		scroll-divisor = <2>;   // Increase wheel velocity (default: 2)
// 		//invert-scroll-x;      // Invert wheel X axis (left is right, and vice versa)
// 		//invert-scroll-y;      // Invert wheel Y axis (up is down, and vice versa)
// 		mode = <PIM447_MOVE>;   // Act as pointer at startup (default: PIM447_SCROLL for mouse scroll)
// 	};
// };

&flash0 {

	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		boot_partition: partition@0 {
			label = "mcuboot";
			reg = <0x000000000 0x0000C000>;
		};
		slot0_partition: partition@c000 {
			label = "image-0";
			reg = <0x0000C000 0x00067000>;
		};
		slot1_partition: partition@73000 {
			label = "image-1";
			reg = <0x00073000 0x00067000>;
		};
		scratch_partition: partition@da000 {
			label = "image-scratch";
			reg = <0x000da000 0x0001e000>;
		};

		/*
		 * The flash starting at 0x000f8000 and ending at
		 * 0x000fffff is reserved for use by the application.
		 */

		/* Storage partition will be used by FCB/NFFS/NVS if enabled. */
		storage_partition: partition@f8000 {
			label = "storage";
			reg = <0x000f8000 0x00008000>;
		};
	};
};

zephyr_udc0: &usbd {
	compatible = "nordic,nrf-usbd";
	status = "okay";
};

